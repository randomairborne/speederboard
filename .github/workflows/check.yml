name: Cargo Check
on:
  pull_request:
    paths:
      - src/**
      - subcrates/**
      - migrations/**
      - .sqlx/**
      - .github/**
      - build.rs
      - Cargo.toml
      - Cargo.lock
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      s3:
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_SERVER_PORT_NUMBER: 9000
          MINIO_SERVER_ROOT_USER: admin
          MINIO_SERVER_ROOT_PASSWORD: admin
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install various dependencies
        run: apt update -y && apt install pkg-config curl build-essential openssl libssl-dev git python3 -y

      - name: Safelist all git directories
        run: git config --global safe.directory '*'

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: Cache Packages
        uses: Swatinem/rust-cache@v2
        with:
          key: "check"

      - name: Check Rust formatting
        run: cargo fmt --check

      - name: Install prettier
        run: npm install

      - name: Check web formatting
        run: npm run prettier-check

      - name: Check dev build
        run: cargo clippy

      - name: Check prod build
        run: cargo clippy --no-default-features

      - name: Generate test data
        run: python3 ./src/fixtures/generate/all.py

      - name: Run tests
        run: cargo test
        env:
          SQLX_OFFLINE: true
          DATABASE_URL: postgres://postgres:postgres@postgres/postgres
